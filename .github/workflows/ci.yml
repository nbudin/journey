name: Continuous integration

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  # minitest:
  #   name: minitest
  #   runs-on: ubuntu-latest
  #   env:
  #     TEST_DATABASE_URL: postgres://postgres:postgres@localhost/${{ github.event.repository.name }}_test
  #     RAILS_ENV: test
  #   services:
  #     postgres:
  #       image: postgres:14.8
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432:5432
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install libvips42
  #       run: sudo apt-get update && sudo apt-get install libvips42
  #     - name: Set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         bundler-cache: true
  #     - name: Database setup
  #       run: bundle exec rails db:create db:migrate
  #     - name: Run tests
  #       run: TERM=xterm-color bundle exec rails test
  #     - name: Publish Test Report
  #       uses: mikepenz/action-junit-report@v3
  #       if: always() # always run even if the previous step fails
  #       with:
  #         check_name: 'Minitest Report'
  #         report_paths: 'test/reports/TEST-*.xml'
  #     - name: Archive HTML test reports
  #       uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: test-reports
  #         path: test/html_reports
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Read .ruby-version
        id: ruby-version
        run: echo "ruby-version=$(cat .ruby-version)" >> $GITHUB_OUTPUT
      - name: Build (and push to registry, if on main)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' }}
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          build-args: |
            RUBY_VERSION=${{ steps.ruby-version.outputs.ruby-version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  update-release-draft:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
    needs:
      - docker-build
      # - minitest
    outputs:
      name: ${{ steps.release-drafter.outputs.name }}
      html_url: ${{ steps.release-drafter.outputs.html_url }}
    steps:
      - uses: release-drafter/release-drafter@v5
        id: release-drafter
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
